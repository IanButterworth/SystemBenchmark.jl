name: Run tests

on: [push]

jobs:
  test:
    runs-on: self-hosted
    # runs-on: ${{ matrix.os }}
    # strategy:
    #   matrix:
    #     julia-version: ['1.4']
    #     julia-arch: [x64]
    #     os: [ubuntu-latest, macOS-latest, windows-latest]
    #     exclude:
    #       - os: macOS-latest
    #         julia-arch: x86

    steps:
      - run: julia -e 'using InteractiveUtils; versioninfo()'
      - run: julia -e '@info "Hello world"'
      - run: julia --color=yes -e '@info "Hello world"'
      - run: julia --color=yes -e 'using Pkg; Pkg.status()'
      - run: julia --color=yes -e 'using Pkg; Pkg.status()'      
      - run: julia --color=yes --check-bounds=yes --project -e '@info "Hello world"'
      - run: julia --color=no -e '@info "Hello world"'
      - run: julia --color=yes -e 'using Logging; @show global_logger().stream === stderr'
      - run: echo "::set-env name=PERSONAL_ACCESS_TOKEN::${{ secrets.PERSONAL_ACCESS_TOKEN }}"
      - uses: actions/checkout@v1.0.0
      # - uses: julia-actions/setup-julia@latest
        # with:
        #   version: ${{ matrix.julia-version }}
      - name: Cache artifacts
        uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts 
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - uses: julia-actions/julia-runtest@latest
      - uses: julia-actions/julia-processcoverage@v1
